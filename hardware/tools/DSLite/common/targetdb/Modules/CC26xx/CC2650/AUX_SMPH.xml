<?xml version="1.0" encoding="UTF-8"?>
<module id="AUX_SMPH" HW_revision="" XML_version="1.0" description="AUX Semaphore Controller

" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="setup_parser.xsd">
   <register acronym="SMPH0" width="32" description="Semaphore 0" id="SMPH0" offset="0x0">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Status when reading:

0: Semaphore was already taken
1: Semaphore was available and hence taken by this read access

Reading the register causes it to change value to 0. Releasing the semaphore is done by writing 1" id="STAT" resetval="0x1">
      </bitfield>
   </register>
   <register acronym="SMPH1" width="32" description="Semaphore 1" id="SMPH1" offset="0x4">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Status when reading:

0: Semaphore was already taken
1: Semaphore was available and hence taken by this read access

Reading the register causes it to change value to 0. Releasing the semaphore is done by writing 1" id="STAT" resetval="0x1">
      </bitfield>
   </register>
   <register acronym="SMPH2" width="32" description="Semaphore 2" id="SMPH2" offset="0x8">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Status when reading:

0: Semaphore was already taken
1: Semaphore was available and hence taken by this read access

Reading the register causes it to change value to 0. Releasing the semaphore is done by writing 1" id="STAT" resetval="0x1">
      </bitfield>
   </register>
   <register acronym="SMPH3" width="32" description="Semaphore 3" id="SMPH3" offset="0xc">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Status when reading:

0: Semaphore was already taken
1: Semaphore was available and hence taken by this read access

Reading the register causes it to change value to 0. Releasing the semaphore is done by writing 1" id="STAT" resetval="0x1">
      </bitfield>
   </register>
   <register acronym="SMPH4" width="32" description="Semaphore 4" id="SMPH4" offset="0x10">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Status when reading:

0: Semaphore was already taken
1: Semaphore was available and hence taken by this read access

Reading the register causes it to change value to 0. Releasing the semaphore is done by writing 1" id="STAT" resetval="0x1">
      </bitfield>
   </register>
   <register acronym="SMPH5" width="32" description="Semaphore 5" id="SMPH5" offset="0x14">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Status when reading:

0: Semaphore was already taken
1: Semaphore was available and hence taken by this read access

Reading the register causes it to change value to 0. Releasing the semaphore is done by writing 1" id="STAT" resetval="0x1">
      </bitfield>
   </register>
   <register acronym="SMPH6" width="32" description="Semaphore 6" id="SMPH6" offset="0x18">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Status when reading:

0: Semaphore was already taken
1: Semaphore was available and hence taken by this read access

Reading the register causes it to change value to 0. Releasing the semaphore is done by writing 1" id="STAT" resetval="0x1">
      </bitfield>
   </register>
   <register acronym="SMPH7" width="32" description="Semaphore 7" id="SMPH7" offset="0x1c">
      <bitfield range="" begin="31" width="31" end="1" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED1" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="0" width="1" end="0" rwaccess="RW" description="Status when reading:

0: Semaphore was already taken
1: Semaphore was available and hence taken by this read access

Reading the register causes it to change value to 0. Releasing the semaphore is done by writing 1" id="STAT" resetval="0x1">
      </bitfield>
   </register>
   <register acronym="AUTOTAKE" width="32" description="Sticky Request For Single Semaphore" id="AUTOTAKE" offset="0x20">
      <bitfield range="" begin="31" width="29" end="3" rwaccess="RO" description="Software should not rely on the value of a reserved. Writing any other value than the reset value may result in undefined behavior." id="RESERVED3" resetval="0x0">
      </bitfield>
      <bitfield range="" begin="2" width="3" end="0" rwaccess="RW" description="Requesting a certain semaphore is done by writing the corresponding semaphore ID, 0x0-0x7, to SMPH_ID. The request is sticky and once the semaphore becomes available it will be taken. At the same time, SMPH_AUTOTAKE_DONE event is asserted. This event is deasserted when SW releases the semaphore or a new ID is written to SMPH_ID. 

Note: SW must wait until SMPH_AUTOTAKE_DONE event is triggered before writing a new ID to SMPH_ID . Failing to do so might lead to permanently lost semaphores as the owners may be unknown" id="SMPH_ID" resetval="0x0">
      </bitfield>
   </register>
</module>
